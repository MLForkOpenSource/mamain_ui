<template>
  <ui-page top="0">
    <ui-scroll-view scroll-y height="{{height}}" pull-down="{{ pullDown }}" enable-reach-bottom-load ="{{loadMore}}" on-load-more="{{ handleLoadMore }}">
      <ui-view class="win" align="center">
        <ui-button type="primary" full-width="false" bindtap="forcedUnlocking">强制开锁</ui-button>
        <ui-button type="primary" full-width="false" bindtap="hqOpen">换气开启</ui-button>
        <ui-button type="primary" full-width="false" bindtap="hqClose">换气关闭</ui-button>
        <ui-button type="primary" full-width="false" bindtap="tfOpen">吹风开启</ui-button>
        <ui-button type="primary" full-width="false" bindtap="tfClose">吹风关闭</ui-button>
      </ui-view>
      <ui-view class="content_list">
        <ui-row height="46" align="center" border-top  border-bottom space-top="20">
          <ui-col width="40" vertical-align="middle"  border-left border-right>
          </ui-col>
          <ui-col vertical-align="middle"  border-right>
            <ui-view class="title">编号</ui-view>
          </ui-col>
          <ui-col vertical-align="middle"  border-right>
            <ui-view class="title">名称</ui-view>
          </ui-col>
          <ui-col width="70" vertical-align="middle"  border-right>
            <ui-view class="title">使用</ui-view>
          </ui-col>
        </ui-row>
        <ui-view class="demo-content">
          <ui-radio-group bindchange="handleChange1">
            <ui-label ui:for="(item, index) in items">
              <ui-row height="46" align="center" border-bottom>
                <ui-col width="40" vertical-align="middle"  border-left border-right>
                    <ui-radio value="{{index}}"></ui-radio>
                </ui-col>
                <ui-col vertical-align="middle"  border-right>
                  <ui-view class="title">{{item.serialnumber}}</ui-view>
                </ui-col>
                <ui-col vertical-align="middle"  border-right>
                  <ui-view class="title">{{item.name}}</ui-view>
                </ui-col>
                <ui-col width="70" vertical-align="middle"  border-right>
                  <ui-view class="title" ui:if="{{item.used_status === 0}}" style="color:#5bac9d;">未使用</ui-view>
                  <ui-view class="title" ui:if="{{item.used_status === 1}}" style="color:#e2c961;">正在使用</ui-view>
                  <ui-view class="title" ui:if="{{item.used_status === 2}}" style="color:#cb4126;">异常</ui-view>
                  <ui-view class="title" ui:if="{{item.used_status === 3}}" style="color:#a2a3a3;">离线</ui-view>
                </ui-col>
              </ui-row>
            </ui-label>
          </ui-radio-group>
        </ui-view>
      </ui-view>
    <ui-view style="width:200px;margin:0 auto;">
      <ui-divider ui:show="{{!loadMore}}">没有新数据了</ui-divider>
    </ui-view>
    </ui-scroll-view>
  </ui-page>
</template>

<script>
  export default {
    config: {
      navigationStyle:"custom"
    },
    data () {
      return {
        url: ui.getApp().globalData.href,
        items: [],
        height: ui.WIN_HEIGHT,
        pullDown: {
          distance: 50,
          onBegin: () => {},
           onActive: this.handleActive,
          onAfter: this.handlePullDownAfter
        },
        loadMore:true,
        selectValue: '',
        pageIndex: 1,
        total: 0
      }
    },
    methods: {
      handleLoadMore () {
        this.init()
      },
      handleActive () {
        // 将返回的请求接管，实现让请求结果来控制下拉刷新的状态
        return ui.request({
          // promise设置为true，让请求返回promise，这样就可以接管请求
          // 请求结束后页面自动回弹
          promise: true,
          url: '/touchui-backstage/listInfo.do?state=1',
          success: (response) => {
          },
          fail: (err) => {
          }
        })
      },
      // 下拉结束后，执行的函数。因为只要下拉即时没有到达刷新的高度也会触发这个方法
      // flag 为1表示执行了handleActive。为undefined代表handleActive没有执行。
      handlePullDownAfter (flag) {
        if (flag) {
          // 处理下拉刷新
          this.pageIndex = 1
          this.items = []
          this.loadMore = true
          this.init()
        }
      },
      handleChange1 (value) {
        this.selectValue = value
      },
      forcedUnlocking(){
        if(this.selectValue === ''){
          alert("请选择一项设备");
          return false;
        }
        ui.request({
          url: this.url + 'forcedUnlocking', //强制开锁
          data: {
            serialnumber: this.items[this.selectValue].serialnumber,
            client_id: this.items[this.selectValue].client_id
          },
          success: function (res) {
          }
        })
      },
      hqOpen(){
        if(this.selectValue === ''){
          alert("请选择一项设备");
          return false;
        }
        ui.request({
          url: this.url + 'hqOpen', //换气开启
          data: {
            serialnumber: this.items[this.selectValue].serialnumber,
            client_id: this.items[this.selectValue].client_id
          },
          success: function (res) {
          }
        })
      },
      hqClose(){
        if(this.selectValue === ''){
          alert("请选择一项设备");
          return false;
        }
        ui.request({
          url: this.url + 'hqClose', //换气关闭
          data: {
            serialnumber: this.items[this.selectValue].serialnumber,
            client_id: this.items[this.selectValue].client_id
          },
          success: function (res) {
          }
        })
      },
      tfOpen(){
        if(this.selectValue === ''){
          alert("请选择一项设备");
          return false;
        }
        ui.request({
          url: this.url + 'tfOpen', //吹风开启
          data: {
            serialnumber: this.items[this.selectValue].serialnumber,
            client_id: this.items[this.selectValue].client_id
          },
          success: function (res) {
          }
        })
      },
      tfClose(){
        if(this.selectValue === ''){
          alert("请选择一项设备");
          return false;
        }
        ui.request({
          url: this.url + 'tfClose', //吹风关闭
          data: {
            serialnumber: this.items[this.selectValue].serialnumber,
            client_id: this.items[this.selectValue].client_id
          },
          success: function (res) {
          }
        })
      },
      init(){
        var that = this
        ui.request({
          url: this.url + 'getPageList', //仅为示例，并非真实的接口地址
          data: {
            index: this.pageIndex,
            size: 10
          },
          success: function (res) {
            // console.log(JSON.stringify(res.data))
            if(200 !== res.data.status_code){
              return false
            }
            that.total = res.data.total
            if(that.items.length === res.data.total){
              that.loadMore = false
              return false
            }
            that.pageIndex++
            for(var i = 0;i < res.data.data.length;i++){
               that.items.push(res.data.data[i])  
            }
          }
        })
      }
    },
    mounted () {
      this.init();
    } 
  }

</script>

<style lang="less">
*{
  box-sizing: border-box;
}
.ui-page-content{
  background: #fff;
}
.win{
  .ui-button{
    height: 80rpx;
    line-height: 80rpx;
  }
}
.ui-scroll-view{
  width: auto;
  padding: 0 10rpx;
  .demo-content {
  .radio {
    display: block;
    margin-left: 15px;
    padding-top: 10px;
    padding-bottom: 10px;
    &:not(:first-of-type) {
      .mix-1px(1, 0, 0, 0, #d4d4d4);
    }
    .ui-radio {
      margin-right: 6px;
    }
  }
  .paybox{
    text-align:left;
    margin:0;
    padding:0
  }
  .title{
    color:#333;
    font-size:13px;
  }
}
}
</style>